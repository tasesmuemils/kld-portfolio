---
const { title } = Astro.props;
import Header from "../components/layout/Header.astro";
import Footer from "../components/Footer.astro";
import { ViewTransitions } from "astro:transitions";
import "aos/dist/aos.css";
import "@fontsource/poppins";
---

<html lang="en" x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta title={title} />
    <!-- <meta name="generator" content={Astro.generator} > -->
    <ViewTransitions />
  </head>
  <body
    class="bg-primary-50 text-primary-950 dark:bg-primary-950 dark:text-primary-200 antialiased transition"
  >
    <Header />
    <slot />
    <Footer />

    <style is:global>
      [x-cloak] {
        display: none !important;
      }
    </style>

    <script>
      import { aosInit } from "../js/aos";

      aosInit();
      // document.addEventListener("astro:page-load", aosInit);
      document.addEventListener("astro:after-swap", aosInit);
    </script>

    <script>
      import Alpine from "alpinejs";
      import collapse from "@alpinejs/collapse";
      import intersect from "@alpinejs/intersect";

      Alpine.plugin(collapse);
      Alpine.plugin(intersect);

      Alpine.store("theme", {
        init() {
          this.isDark = (() => {
            if (
              typeof localStorage !== "undefined" &&
              localStorage.getItem("theme")
            ) {
              return localStorage.getItem("theme") === "dark";
            }
            if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
              return true;
            }
            return false;
          })();
        },

        isDark: false,

        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem("theme", this.isDark ? "dark" : "light");
        },
      });

      window.Alpine = Alpine;
      Alpine.start();
    </script>
  </body>
</html>
